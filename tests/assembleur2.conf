comment               \#[^\n]*
newline               [\n]+
blank                 [ \t]+
colon                 :
semicolon             ;
dir::set              \.set
dir::interned         \.interned
dir::consts           \.consts
dir::names            \.names
dir::text             \.text
dir::line             \.line
dir::varnames         \.varnames
dir::freevars         \.freevars
dir::cellvars         \.cellvars
dir::text             \.text
dir::codestart        \.code_start
dir::codeend          \.code_end

number::hex           [+\-]?0x[0-9a-f]+
number::float         [+\-]?[0-9]+\.[0-9]*
number::float::exp    [+\-]?[0-9]+\.?[0-9]*[eE][+\-]?[0-9]+
number::integer       [+\-]?[0-9]+
name                  "<[a-zA-z]*>"
string                "^"+"
pycst::None           None
pycst::True	          True
null                  null
pycst::False          False
insn::0               PRINT_ITEM
insn::0               PRINT_NEWLINE
insn::0               RETURN_VALUE
insn::0               POP_EXCEPT
insn::0               BUILD_CLASS
insn::0               END_FINALLY
insn::0               POP_BLOCK
insn::0               YIELD_VALUE
insn::0               SETUP_ANNOTATIONS
insn::0               EXEC_STMT
insn::0               IMPORT_STAR
insn::0               WITH_CLEANUP_FINISH
insn::0               LOAD_LOCALS
insn::0               WITH_CLEANUP_START
insn::0               WITH_CLEANUP
insn::0               BREAK_LOOP
insn::0               INPLACE_OR
insn::0               INPLACE_XOR
insn::0               INPLACE_AND
insn::0               INPLACE_RSHIFT
insn::0               INPLACE_LSHIFT
insn::0               PRINT_NEWLINE_TO
insn::0               GET_AWAITABLE
insn::0               PRINT_ITEM_TO
insn::0               YIELD_FROM
insn::0               LOAD_BUILD_CLASS
insn::0               PRINT_ITEM
insn::0               PRINT_EXPR
insn::0               GET_YIELD_FROM_ITER
insn::0               GET_ITER
insn::0               INPLACE_POWER
insn::0               BINARY_OR
insn::0               BINARY_XOR
insn::0               BINARY_AND
insn::0               BINARY_RSHIFT
insn::0               BINARY_LSHIFT
insn::0               DELETE_SUBSCR
insn::0               STORE_SUBSCR
insn::0               INPLACE_MODULO
insn::0               INPLACE_DIVIDE
insn::0               INPLACE_MULTIPLY
insn::0               INPLACE_SUBTRACT
insn::0               INPLACE_ADD
insn::0               END_ASYNC_FOR
insn::0               STORE_MAP
insn::0               BEGIN_FINALLY
insn::0               DELETE_SLICE_PLUS_1
insn::0               DELETE_SLICE_PLUS_2
insn::0               DELETE_SLICE_PLUS_3
insn::0               BEFORE_ASYNC_WITH
insn::0               GET_ANEXT
insn::0               GET_AITER
insn::0               DELETE_SLICE
insn::0               STORE_SLICE_PLUS_1
insn::0               STORE_SLICE_PLUS_2
insn::0               STORE_SLICE_PLUS_3
insn::0               STORE_SLICE
insn::0               SLICE_PLUS_1
insn::0               SLICE_PLUS_2
insn::0               SLICE_PLUS_3
insn::0               SLICE
insn::0               INPLACE_TRUE_DIVIDE
insn::0               INPLACE_FLOOR_DIVIDE
insn::0               BINARY_TRUE_DIVIDE
insn::0               BINARY_FLOOR_DIVIDE
insn::0               BINARY_SUBSCR
insn::0               BINARY_SUBSTRACT
insn::0               BINARY_ADD
insn::0               BINARY_MODULO
insn::0               BINARY_DIVIDE
insn::0               BINARY_MULTIPLY
insn::0               BINARY_POWER
insn::0               BINARY_MATRIX_MULTIPLY
insn::0               INPLACE_MATRIX_MULTIPLY
insn::0               UNARY_INVERT
insn::0               UNARY_CONVERT
insn::0               UNARY_NOT
insn::0               UNARY_NEGATIVE
insn::0               UNARY_POSITIVE
insn::0               NOP
insn::0               ROT_FOUR
insn::0               DUP_TOP_TWO
insn::0               DUP_TOP
insn::0               ROT_THREE
insn::0               ROT_TWO
insn::0               POP_TOP
insn::0               STOP_CODE
insn::1               LOAD_CONST
insn::1               STORE_NAME
insn::1               LOAD_NAME
insn::1               COMPARE_OP
insn::1               POP_JUMP_IF_FALSE
insn::1               JUMP_FORWARD
identifier            [a-zA-Z_][a-zA-Z_0-9]*
brack::left           {
brack::right          }
paren::left           (
paren::right          )

insn::1::0x64         LOAD_CONST
